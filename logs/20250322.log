2025-03-22 17:06:10 - src.utils.logger - INFO - プログラムを開始
2025-03-22 17:06:10 - src.utils.logger - WARNING - 入力ディレクトリが存在しません: src/input
2025-03-22 17:06:10 - src.utils.logger - INFO - 入力ディレクトリを作成しました: src/input
2025-03-22 17:06:10 - src.utils.logger - WARNING - PowerPointファイルが見つかりません: src/input
2025-03-22 17:06:16 - src.utils.logger - INFO - プログラムを開始
2025-03-22 17:06:16 - src.utils.logger - WARNING - PowerPointファイルが見つかりません: src/input
2025-03-22 17:15:11 - src.utils.logger - INFO - プログラムを開始
2025-03-22 17:15:11 - src.utils.logger - ERROR - 予期せぬエラーが発生
Traceback (most recent call last):
  File "C:\Users\gwsgs\workSpace\check_pptx\main.py", line 77, in main
    if not os.path.exists(input_dir):
                          ^^^^^^^^^
NameError: name 'input_dir' is not defined
2025-03-22 17:15:27 - src.utils.logger - INFO - プログラムを開始
2025-03-22 17:15:27 - src.utils.logger - ERROR - 予期せぬエラーが発生
Traceback (most recent call last):
  File "C:\Users\gwsgs\workSpace\check_pptx\main.py", line 83, in main
    pptx_files = [f for f in os.listdir(input_dir) if f.endswith(".pptx")]
                                        ^^^^^^^^^
NameError: name 'input_dir' is not defined
2025-03-22 17:16:09 - src.utils.logger - INFO - プログラムを開始
2025-03-22 17:16:09 - src.utils.logger - WARNING - PowerPointファイルが見つかりません: C:\Users\gwsgs\workSpace\check_pptx\assets\temp
2025-03-22 17:16:14 - src.utils.logger - INFO - プログラムを開始
2025-03-22 17:16:14 - src.utils.logger - INFO - ファイル処理開始: 20250322_171614_第07回_DL講義資料_RNN.pptx
2025-03-22 17:16:14 - src.utils.logger - INFO - PowerPointファイルの読み込みを開始: C:\Users\gwsgs\workSpace\check_pptx\assets\temp\20250322_171614_第07回_DL講義資料_RNN.pptx
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 1 の処理を開始
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 1 の処理が完了
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 2 の処理を開始
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 2 の処理が完了
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 3 の処理を開始
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 3 の処理が完了
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 4 の処理を開始
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 4 の処理が完了
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 5 の処理を開始
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 5 の処理が完了
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 6 の処理を開始
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 6 の処理が完了
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 7 の処理を開始
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 7 の処理が完了
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 8 の処理を開始
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 8 の処理が完了
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 9 の処理を開始
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 9 の処理が完了
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 10 の処理を開始
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 10 の処理が完了
2025-03-22 17:16:14 - src.utils.logger - DEBUG - スライド 11 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 11 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 12 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 12 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 13 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 13 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 14 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 14 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 15 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 15 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 16 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 16 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 17 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 17 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 18 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 18 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 19 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 19 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 20 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 20 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 21 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 21 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 22 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 22 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 23 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 23 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 24 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 24 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 25 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 25 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 26 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 26 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 27 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 27 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 28 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 28 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 29 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 29 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 30 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 30 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 31 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 31 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 32 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 32 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 33 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 33 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 34 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 34 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 35 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 35 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 36 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 36 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 37 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 37 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 38 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 38 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 39 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 39 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 40 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 40 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 41 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 41 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 42 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 42 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 43 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 43 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 44 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 44 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 45 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 45 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 46 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 46 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 47 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 47 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 48 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 48 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 49 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 49 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 50 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 50 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 51 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 51 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 52 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 52 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 53 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 53 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 54 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 54 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 55 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 55 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 56 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 56 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 57 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 57 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 58 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 58 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 59 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 59 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 60 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 60 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 61 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 61 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 62 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 62 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 63 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 63 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 64 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 64 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 65 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 65 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 66 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 66 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 67 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 67 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 68 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 68 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 69 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 69 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 70 の処理を開始
2025-03-22 17:16:15 - src.utils.logger - DEBUG - スライド 70 の処理が完了
2025-03-22 17:16:15 - src.utils.logger - INFO - PowerPointファイルの読み込みが完了: C:\Users\gwsgs\workSpace\check_pptx\assets\temp\20250322_171614_第07回_DL講義資料_RNN.pptx
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 1 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 第7回　回帰結合型ニューラルネットワークと系列データ処理
2025-03-22 17:16:15 - src.utils.logger - INFO - - 2025/6/5
2025-03-22 17:16:15 - src.utils.logger - INFO - - 講義講師：中野聡大

2025-03-22 17:16:15 - src.utils.logger - INFO - - 深層学習・Deep Learning基礎講座


2025-03-22 17:16:15 - src.utils.logger - INFO - - 演習講師：飯山燈

2025-03-22 17:16:15 - src.utils.logger - INFO - - 許諾なく撮影や第三者への開示を禁止します
2025-03-22 17:16:15 - src.utils.logger - INFO - - 1
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 2 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 自己紹介
2025-03-22 17:16:15 - src.utils.logger - INFO - - 中野 聡大
松尾研博士2年
2021年から松尾研所属
研究内容：物体中心世界モデル
物体中心学習と世界モデルを組み合わせた研究
エージェントによる物体操作による表現獲得に興味がある
物体の相互作用に条件づけた物体中心世界モデルの提案（ICLR2023）
その他の活動
世界モデル寄付講座や本講義のTAをやっています

2025-03-22 17:16:15 - src.utils.logger - INFO - - 2
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 3 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 全体の位置づけ
2025-03-22 17:16:15 - src.utils.logger - INFO - - 3
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 4 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 今回の目的・目標
2025-03-22 17:16:15 - src.utils.logger - INFO - - 目的
代表的な回帰結合型ニューラルネットワーク（RNN；Recurrent Neural Network）の諸手法の概要を理解し，実装できるようになる

目標
主要なRNNの構成要素とその意味を説明できるようになる
新たなRNNモデルに対し，その意図を読み解けるようになる
基本的なRNNを実装できるようになる


2025-03-22 17:16:15 - src.utils.logger - INFO - - 4
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 5 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 注意点
2025-03-22 17:16:15 - src.utils.logger - INFO - - 今回から難易度が上がると思います
これまでは講義中に概ね理解できていたとしても，ここからつまづきがち

本講義の内容は，手を動かすことで復習してください
本講義では後から自力で復習して理解できる水準を目標とします

今は理解しきれなくても問題ないです
しかし，後ほどでいいので仕組みはしっかり理解して下さい

2025-03-22 17:16:15 - src.utils.logger - INFO - - 5
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 6 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 目次
2025-03-22 17:16:15 - src.utils.logger - INFO - - 系列データとは
基本的なRNN（回帰型ニューラルネットワーク）
BPTT （通時的誤差逆伝播法）
Sequence-to-sequenceモデル
LSTM （長・短期記憶）
LSTMの亜種：GRU（ゲート付再帰的ユニット）
Attention
2025-03-22 17:16:15 - src.utils.logger - INFO - - 6
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 7 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 目次
2025-03-22 17:16:15 - src.utils.logger - INFO - - 系列データとは
基本的なRNN（回帰型ニューラルネットワーク）
BPTT （通時的誤差逆伝播法）
Sequence-to-sequenceモデル
LSTM （長・短期記憶）
LSTMの亜種：GRU（ゲート付再帰的ユニット）
Attention
2025-03-22 17:16:15 - src.utils.logger - INFO - - 7
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 8 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 系列データとは
2025-03-22 17:16:15 - src.utils.logger - INFO - - 自然言語，音声，動画，経済統計，遺伝子配列，など
世の中の多くの実データに系列性がある


2025-03-22 17:16:15 - src.utils.logger - INFO - - COVID-19の新規感染者数の推移（2020）
2025-03-22 17:16:15 - src.utils.logger - INFO - - 8
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 9 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 系列データを対象とした深層学習の研究
2025-03-22 17:16:15 - src.utils.logger - INFO - - 自然言語，音声，動画に注目した研究が多い
機械翻訳や音声認識など実際のアプリケーションに活用されている

実際はこれらの研究にはCNNも活用されている
一部に関しての詳細は後日の講義で触れる予定
今回の講義ではドメインに依らず一般的に用いられる手法を紹介します

2025-03-22 17:16:15 - src.utils.logger - INFO - - 9
2025-03-22 17:16:15 - src.utils.logger - INFO - - 機械翻訳
2025-03-22 17:16:15 - src.utils.logger - INFO - - 音声認識
2025-03-22 17:16:15 - src.utils.logger - INFO - - 文章生成
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 10 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 系列予測のモチベーション
2025-03-22 17:16:15 - src.utils.logger - INFO - - データの並び方（順番）に意味がある
例: “This car is red, not black.” と “This car is black, not red.”は意味が異なるが，one-hot ベクトル（bag-of-words）だと同じ表現になる

入力したい系列の長さはまちまちである
モデル側からすれば，長さに対して汎化したい
入力だけではなく出力したい長さも異なる

データの並び方に上手に対応するにはどうすればいいのか？
たとえば画像に対するCNNでは畳み込みフィルタを用いて解決していた


2025-03-22 17:16:15 - src.utils.logger - INFO - - 10
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 11 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 系列予測に向けた準備
2025-03-22 17:16:15 - src.utils.logger - INFO - - 系列データ𝑥(𝑡)を入力とする
𝑥_1, 𝑥_2, 𝑥_3,…, 𝑥_𝑇

これまでに学んできたニューラルネットワークでは，入力がそのまま順伝播で出力され，𝑡に関する情報がネットワーク内に保持されない．
例えば，自然言語だと長期や短期の文脈が保持されない．
これらの情報を隠れ層ℎに保持しておきたい．
𝑡によって状態が変化するのでℎ(𝑡)と書くことにする．


2025-03-22 17:16:15 - src.utils.logger - INFO - - 11
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 12 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 目次
2025-03-22 17:16:15 - src.utils.logger - INFO - - 系列データとは
基本的なRNN（回帰型ニューラルネットワーク）
BPTT （通時的誤差逆伝播法）
Sequence-to-sequenceモデル
LSTM （長・短期記憶）
LSTMの亜種：GRU（ゲート付再帰的ユニット）
Attention
2025-03-22 17:16:15 - src.utils.logger - INFO - - 12
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 13 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - RNN（Recurrent Neural Network）
2025-03-22 17:16:15 - src.utils.logger - INFO - - 回帰型ニューラルネットワーク（RNN）
系列データを処理するためのニューラルネットワークの一種

過去の隠れ層の状態を考慮しながら学習が進められる
言い換えるなら過去のパラメータの共有

過去の状態を再帰的にフィードバックする


2025-03-22 17:16:15 - src.utils.logger - INFO - - 13
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 14 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - RNNの隠れ層
2025-03-22 17:16:15 - src.utils.logger - INFO - - 過去の隠れ層ℎの状態を，現在の隠れ層に反映させる．
過去の状態を再帰的にフィードバック（ループ）させている．


2025-03-22 17:16:15 - src.utils.logger - INFO - - 14
2025-03-22 17:16:15 - src.utils.logger - INFO - - Wikipedia「回帰型ニューラルットワーク」
2025-03-22 17:16:15 - src.utils.logger - INFO - - 入力層
2025-03-22 17:16:15 - src.utils.logger - INFO - - 隠れ層
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 15 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 基本的なRNNの式
2025-03-22 17:16:15 - src.utils.logger - INFO - - 15
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 16 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - RNNの展開（Unroll, Unfold）
2025-03-22 17:16:15 - src.utils.logger - INFO - - ループ構造を展開した形で書き換える
1ステップずつずらして展開する

展開すると，単純なNNのグラフの結合として捉えられる


2025-03-22 17:16:15 - src.utils.logger - INFO - - 16
2025-03-22 17:16:15 - src.utils.logger - INFO - - Wikipedia「回帰型ニューラルネットワーク」
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 17 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - BPTT（Back Propagation Through Time）
2025-03-22 17:16:15 - src.utils.logger - INFO - - 誤差逆伝播法を使うと，過去へも誤差伝播が起こる
これは通時的誤差逆伝播法（BPTT）と呼ばれる


2025-03-22 17:16:15 - src.utils.logger - INFO - - 17
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 18 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - BPTTの数式
2025-03-22 17:16:15 - src.utils.logger - INFO - - 18
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 19 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - BPTTの数式
2025-03-22 17:16:15 - src.utils.logger - INFO - - 19
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 20 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - BPTTの数式
2025-03-22 17:16:15 - src.utils.logger - INFO - - 20
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 21 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - BPTTの数式
2025-03-22 17:16:15 - src.utils.logger - INFO - - 21
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 22 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - BPTTの数式
2025-03-22 17:16:15 - src.utils.logger - INFO - - 22
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 23 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 基本的なRNN まとめ
2025-03-22 17:16:15 - src.utils.logger - INFO - - RNNは系列データを処理するためのニューラルネットワークの一種

過去の隠れ層の状態を再帰的にフィードバックしながら学習を進める

回帰的なネットワークであっても，ループを展開して考えれば，BPTTを用いた勾配降下法で同様に学習できる
参考: 学習にはReal Time Recurrent Learning（RTRL）など異なる方法もある

2025-03-22 17:16:15 - src.utils.logger - INFO - - 23
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 24 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 双方向RNN
2025-03-22 17:16:15 - src.utils.logger - INFO - - Bi-LSTM（Bidirectional LSTM）もたびたび用いられる手法の一つ

「前から後」のモデルだけではなく「後から前」の逆方向のモデルも考えて，これらを統合して出力する

2025-03-22 17:16:15 - src.utils.logger - INFO - - 24
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 25 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - Encoder-Decoderモデル
2025-03-22 17:16:15 - src.utils.logger - INFO - - 系列から別の系列に変換する確率をモデル化したもの
系列変換（sequence-to-sequence）モデルとも呼ばれる
EncoderとDecoderから構成される
Encoder: 系列（単語列）Xを固定長ベクトルZに変換するモデル
Decoder: 固定長ベクトルZから系列Yを出力するモデル

2025-03-22 17:16:15 - src.utils.logger - INFO - - 25
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 26 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - Encoderモデル
2025-03-22 17:16:15 - src.utils.logger - INFO - - 26
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 27 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - Decoderモデル
2025-03-22 17:16:15 - src.utils.logger - INFO - - 27
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 28 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 目次
2025-03-22 17:16:15 - src.utils.logger - INFO - - 系列データとは
基本的なRNN（回帰型ニューラルネットワーク）
BPTT （通時的誤差逆伝播法）
Sequence-to-sequenceモデル
LSTM （長・短期記憶）
LSTMの亜種：GRU（ゲート付再帰的ユニット）
Attention
2025-03-22 17:16:15 - src.utils.logger - INFO - - 28
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 29 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 基本的なRNNの問題点
2025-03-22 17:16:15 - src.utils.logger - INFO - - 29
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 30 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 勾配に関する問題
2025-03-22 17:16:15 - src.utils.logger - INFO - - 30
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 31 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 勾配に関する問題
2025-03-22 17:16:15 - src.utils.logger - INFO - - 31
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 32 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - LSTM （Long Short-Term Memory）
2025-03-22 17:16:15 - src.utils.logger - INFO - - 実際のRNNで非常によく用いられる構成がLSTM（長・短期記憶）
主にSchmidhuberらが研究し発展させてきた手法

隠れ「層」から「ユニット」にする


2025-03-22 17:16:15 - src.utils.logger - INFO - - 32
2025-03-22 17:16:15 - src.utils.logger - INFO - - Wikipedia「長・短期記憶」から改変
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 33 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - LSTM（Long Short-Term Memory）
2025-03-22 17:16:15 - src.utils.logger - INFO - - LSTMの仕組みを（簡略化し）グラフで表すとこうなる
これでも一見したところで分かりづらい…


2025-03-22 17:16:15 - src.utils.logger - INFO - - 33
2025-03-22 17:16:15 - src.utils.logger - INFO - - Wikipedia「長・短期記憶」
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 34 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - メモリセル
2025-03-22 17:16:15 - src.utils.logger - INFO - - 理解のため，LSTMを段階を追って構成していく

誤差を（そのまま）伝播させられるよう，メモリセルを導入する
定誤差カルーセル（CEC；Constant Error Carousel）と呼ばれる


2025-03-22 17:16:15 - src.utils.logger - INFO - - 34
2025-03-22 17:16:15 - src.utils.logger - INFO - - ×1.0
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 35 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 時間依存性の問題
2025-03-22 17:16:15 - src.utils.logger - INFO - - メモリセルの導入により誤差を記録することができるようになる

しかし，これだけでは時間依存性を学習できない
発火すべき信号が伝播されてきたら重みを大きくすべき
無関係な信号が伝播されてきたら重みを小さくすべき
どちらも両立させることは難しい

発火すべき信号のみ伝播し，それ以外の信号を遮断できるようにするために「ゲート」という仕組みを導入する


2025-03-22 17:16:15 - src.utils.logger - INFO - - 35
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 36 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - LSTMのゲート: 入力ゲート
2025-03-22 17:16:15 - src.utils.logger - INFO - - 入力ゲート
記録できる誤差を入力によって選択できるようにする

2025-03-22 17:16:15 - src.utils.logger - INFO - - 36
2025-03-22 17:16:15 - src.utils.logger - INFO - - ×
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 37 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - LSTMのゲート: 出力ゲート
2025-03-22 17:16:15 - src.utils.logger - INFO - - 出力ゲート
CECより出力される誤差を入力によって選択できるようにする
これが最初のLSTM [Hochreiter & Schmidhuber 1997]

2025-03-22 17:16:15 - src.utils.logger - INFO - - 37
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 38 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - LSTMのゲート: 忘却ゲート
2025-03-22 17:16:15 - src.utils.logger - INFO - - 忘却ゲート
入力によって短期間に一気にCECの記憶を忘れられるようにする
劇的なパターン変化に柔軟に対応できるようになる [Gers+ 1999]

2025-03-22 17:16:15 - src.utils.logger - INFO - - 38
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 39 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - ゲート制御の問題
2025-03-22 17:16:15 - src.utils.logger - INFO - - 39
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 40 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 覗き穴結合（Peephole Connections）
2025-03-22 17:16:15 - src.utils.logger - INFO - - 覗き穴結合
CECの状態が直接外部にアクセスできるようにする [Gers & Schmidhuber 2000]

2025-03-22 17:16:15 - src.utils.logger - INFO - - 40
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 41 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - LSTM（再掲）
2025-03-22 17:16:15 - src.utils.logger - INFO - - 形を整えると初めに掲載したグラフになる
2025-03-22 17:16:15 - src.utils.logger - INFO - - 41
2025-03-22 17:16:15 - src.utils.logger - INFO - - Wikipedia「長・短期記憶」
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 42 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - LSTMの数式展開 
2025-03-22 17:16:15 - src.utils.logger - INFO - - 42
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 43 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - LSTMの数式展開
2025-03-22 17:16:15 - src.utils.logger - INFO - - 43
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 44 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - LSTMの数式展開
2025-03-22 17:16:15 - src.utils.logger - INFO - - 44
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 45 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - LSTMの数式展開
2025-03-22 17:16:15 - src.utils.logger - INFO - - 45
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 46 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - LSTMの数式展開
2025-03-22 17:16:15 - src.utils.logger - INFO - - 46
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 47 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - LSTMの数式展開
2025-03-22 17:16:15 - src.utils.logger - INFO - - 47
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 48 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - LSTM まとめ
2025-03-22 17:16:15 - src.utils.logger - INFO - - LSTMを構成する主要素は以下の2つ
メモリセル（CEC）
ゲート（入力，出力，忘却）

注意: LSTMでも必ずしも勾配の問題が解決するわけではない

注意: 本講義で紹介したLSTMはあくまでも一例
一部が省略したものも，たびたび用いられる
ライブラリを使用する際は仕様を確認しておくのが吉

2025-03-22 17:16:15 - src.utils.logger - INFO - - 48
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 49 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - LSTMの亜種: GRU（Gated Recurrent Unit）
2025-03-22 17:16:15 - src.utils.logger - INFO - - LSTMと同じくGRU（ゲート付再帰的ユニット）[Cho 14]も用いられる
特定のデータセット下ではLSTMよりも高性能

2025-03-22 17:16:15 - src.utils.logger - INFO - - 49
2025-03-22 17:16:15 - src.utils.logger - INFO - - Wikipedia「ゲート付き回帰型ユニット」から改変
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 50 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - GRUの構造
2025-03-22 17:16:15 - src.utils.logger - INFO - - グラフにすると以下のように書ける
構造がLSTMより簡素になっている

2025-03-22 17:16:15 - src.utils.logger - INFO - - 50
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 51 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - GRUのゲート: リセットゲート・更新ゲート
2025-03-22 17:16:15 - src.utils.logger - INFO - - 51
2025-03-22 17:16:15 - src.utils.logger - INFO - - リセットゲート
2025-03-22 17:16:15 - src.utils.logger - INFO - - 更新ゲート
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 52 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - GRUのゲート: 内部での計算
2025-03-22 17:16:15 - src.utils.logger - INFO - - 52
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 53 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - GRUの数式展開
2025-03-22 17:16:15 - src.utils.logger - INFO - - 53
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 54 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 勾配クリッピング
2025-03-22 17:16:15 - src.utils.logger - INFO - - 勾配発散を防ぐための手法として，勾配クリッピングが用いられる
勾配の絶対値に最大値や最小値を設定しておくこと

2025-03-22 17:16:15 - src.utils.logger - INFO - - 54
2025-03-22 17:16:15 - src.utils.logger - INFO - - [Goodfellow+ 15]
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 55 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 目次
2025-03-22 17:16:15 - src.utils.logger - INFO - - 系列データとは
基本的なRNN（回帰型ニューラルネットワーク）
BPTT （通時的誤差逆伝播法）
Sequence-to-sequenceモデル
LSTM （長・短期記憶）
LSTMの亜種：GRU（ゲート付再帰的ユニット）
Attention
2025-03-22 17:16:15 - src.utils.logger - INFO - - 55
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 56 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - Attention mechanism（注意機構）
2025-03-22 17:16:15 - src.utils.logger - INFO - - 系列中の重要な情報を直接的に用いる仕組み
文中のある単語の意味を理解するために，どのトークン（単語）に注目すれば良いか

以下の利点を兼ね備えている
RNNの系列の位置情報を捉える利点
CNNの並列化しやすいという利点

2025-03-22 17:16:15 - src.utils.logger - INFO - - 56
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 57 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - AttentionつきEncoder-Decoderモデル [Bahdanau+ 2015]
2025-03-22 17:16:15 - src.utils.logger - INFO - - 57
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 58 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - AttentionつきEncoder-Decoderモデル [Bahdanau+ 2015] 
2025-03-22 17:16:15 - src.utils.logger - INFO - - 58
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 59 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - AttentionつきEncoder-Decoderモデル [Bahdanau+ 2015] 
2025-03-22 17:16:15 - src.utils.logger - INFO - - 59
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 60 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - Attentionを用いた代表的なモデル：Transformer [Vaswani+ 2017]
2025-03-22 17:16:15 - src.utils.logger - INFO - - RNNやCNNを用いず，Attentionのみを使用したEncoder-Decoderモデル
言語翻訳の文脈で提案された

Attentionは3種類
Encoder-Decoder Attention
Source-target attentionとも，
　DecoderのみのGPTやEncoderのみのBERTでは存在しない

Encoder Self-Attention

Decoder Masked Self-Attention
Encoder self-attentionと大きな違いはないが，系の予測トークン以降がモデルに見えないようマスクする

2025-03-22 17:16:15 - src.utils.logger - INFO - - 60
2025-03-22 17:16:15 - src.utils.logger - INFO - - Encoder
2025-03-22 17:16:15 - src.utils.logger - INFO - - Decoder
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 61 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 今回の目的・目標（再掲）
2025-03-22 17:16:15 - src.utils.logger - INFO - - 目的
代表的な回帰結合型ニューラルネットワーク（RNN;Recurrent Neural Network）の諸手法の概要を理解し，実装できるようになる

目標
主要なRNNの構成要素とその意味を説明できるようになる
新たなRNNモデルに対し，その意図を読み解けるようになる
基本的なRNNを実装できるようになる


2025-03-22 17:16:15 - src.utils.logger - INFO - - 61
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 62 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 参考文献
2025-03-22 17:16:15 - src.utils.logger - INFO - - 62
2025-03-22 17:16:15 - src.utils.logger - INFO - - 「出版されて数年」かつ「初心者〜中級者向け」の書籍をおすすめします
詳解ディープラーニング 第2版
これならわかる深層学習 入門　など


2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 63 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - 参考文献
2025-03-22 17:16:15 - src.utils.logger - INFO - - 63
2025-03-22 17:16:15 - src.utils.logger - INFO - - [Graves+ 2005] “Bidirectional LSTM Networks for Improved Phoneme Classification and Recognition” Lecture Notes in Computer Science, vol 3697
[Sutskever+ 2014] “Sequence to Sequence Learning with Neural Networks” arXiv:1409.3215
[Hochreiter 1991] “Untersuchungen zu dynamischen neuronalen Netzen“Institut f. Informatik, Technische Univ. Munich.
[Hochreiter & Schmidhuber 1997] “Long Short-Term Memory” Neural Computation 9(8):1735-1780
[Gers+ 2000] “Learning to forget: continual prediction with LSTM” Ninth International Conference on Artificial Neural Networks ICANN 99
[Cho+ 2014] “Learning Phrase Representations using RNN Encoder-Decoder for Statistical Machine Translation” arXiv:1406.1078
[Goodfellow+ 2015] “10 Sequence Modeling: Recurrent and Recursive Nets” A. Deep Learning. MIT Press p407
[Bahdanau+ 2015] “Neural Machine Translation by Jointly Learning to Align and Translate” arXiv:1409.0473
[Vaswani+ 2017] “Attention Is All You Need” arXiv:1706.03762
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 64 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 65 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - Query, Key, Valueを用いたAttention
2025-03-22 17:16:15 - src.utils.logger - INFO - - 65
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 66 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - Self Attention
2025-03-22 17:16:15 - src.utils.logger - INFO - - ある一つの入力データ内の要素同士要素間の類似度・重要度を計算する仕組み．

入力Queryと索引Queryが同じ言葉で構成されているTransformerで用いられるAttentionのこと．

2025-03-22 17:16:15 - src.utils.logger - INFO - - 66
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 67 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - Source Target Attention
2025-03-22 17:16:15 - src.utils.logger - INFO - - Self Attentionとは異なり，異なる入力データセットの要素同士の類似度・重要度を計算する仕組み．

入力Queryと索引Queryが異なる言葉で構成されているTransformerで用いられるAttentionのこと．

2025-03-22 17:16:15 - src.utils.logger - INFO - - 67
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 68 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - Multi-head Attention
2025-03-22 17:16:15 - src.utils.logger - INFO - - 各単語に対し1組のQuery, Key, Valueを割り当てるのではなく，複数のheadという単位に分けてQuery, Key, Valueの組みを用意

各headで潜在表現を計算し，最終的にheadの潜在表現を並列に結合(concat)することで，様々な側面からみた各単語の潜在表現を得る

2025-03-22 17:16:15 - src.utils.logger - INFO - - 68
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 69 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - Masked Attention
2025-03-22 17:16:15 - src.utils.logger - INFO - - 69
2025-03-22 17:16:15 - src.utils.logger - INFO - スライド 70 の内容:
2025-03-22 17:16:15 - src.utils.logger - INFO - - Positional encoding
2025-03-22 17:16:15 - src.utils.logger - INFO - - 70
2025-03-22 17:16:15 - src.utils.logger - INFO - すべてのファイルの処理が完了
